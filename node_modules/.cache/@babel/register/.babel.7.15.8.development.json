{
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/sumon/web development/graphql/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/sumon/web development/graphql\",\"filename\":\"/Users/sumon/web development/graphql/src/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/sumon/web development/graphql\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/sumon/web development/graphql/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/sumon/web development/graphql",
      "filename": "/Users/sumon/web development/graphql/src/index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/sumon/web development/graphql",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/sumon/web development/graphql/src/index.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/sumon/web development/graphql/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/sumon/web development/graphql/src/",
        "sourceFileName": "index.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _graphqlYoga = require(\"graphql-yoga\");\n\n//schema\n//resolvers\n//Scalar type: string, Boolean, Int, Float, ID\n// ! must return same scalar type\n// type name always cap\n//demo data\nvar _users = [{\n  id: '1',\n  name: 'Andrew',\n  email: 'andrew@example.com',\n  age: 27\n}, {\n  id: '2',\n  name: 'Sarah',\n  email: 'sarah@example.com'\n}, {\n  id: '3',\n  name: 'Mike',\n  email: 'mike@example.com'\n}];\nvar _posts = [{\n  id: '10',\n  title: 'GraphQL 101',\n  body: 'This is how to use GraphQL...',\n  published: true,\n  author: '1'\n}, {\n  id: '11',\n  title: 'GraphQL 201',\n  body: 'This is an advanced GraphQL post...',\n  published: false,\n  author: '1'\n}, {\n  id: '12',\n  title: 'Programming Music',\n  body: '',\n  published: false,\n  author: '2'\n}];\nvar comments = [{\n  id: '102',\n  text: 'This worked well for me. Thanks!'\n}, {\n  id: '103',\n  text: 'Glad you enjoyed it.'\n}, {\n  id: '104',\n  text: 'This did no work.'\n}, {\n  id: '105',\n  text: 'Nevermind. I got it to work.'\n}];\nvar typeDefs = \"\\ntype Query{\\n    greeting(greeterName: String): String!\\n    add(a:Float!, b:Float!): String!\\n    sum(number:[Float]!): Float!\\n    number: [Int]!\\n    users: [User!]!\\n    me: User!\\n    posts(query: String): [Post]!\\n    comment: [Comment]!\\n    \\n}\\n\\ntype User{\\n    id: ID!\\n    name: String!\\n    email: String!\\n    age: Int\\n    posts: [Post!]!\\n}\\n\\ntype Post{\\n    id:ID!\\n    title: String!\\n    body: String!\\n    author: User!\\n}\\ntype Comment{\\n    id:ID\\n    text: String!\\n}\\n\"; //age value is not must\n//resolvers get four args parent,args,ctx,info\n\nvar resolvers = {\n  Query: {\n    users: function users(parent, args, ctx, info) {\n      return _users;\n    },\n    sum: function sum(parent, args, ctx, info) {\n      if (args.number.length === 0) {\n        return 0;\n      }\n\n      return args.number.reduce(function (acc, value) {\n        return acc + value;\n      });\n    },\n    add: function add(parent, args, ctx, info) {\n      var sum;\n      return sum = \"\".concat(args.a) + \"\".concat(args.b);\n    },\n    greeting: function greeting(_, args) {\n      console.log(args);\n      return \"Konika said to \".concat(args.greeterName);\n    },\n    me: function me() {\n      return {\n        id: '123098',\n        name: 'Mike',\n        email: 'mike@example.com'\n      };\n    },\n    posts: function posts(_, args) {\n      if (!args.query) {\n        return _posts;\n      }\n\n      return _posts.filter(function (post) {\n        return post.title.toLowerCase().includes(args.query.toLowerCase());\n      });\n    },\n    number: function number() {\n      return [10, 12, 15];\n    }\n  },\n  Post: {\n    //when post call, author call from here. relational database\n    author: function author(parent, args, ctx, info) {\n      return _users.find(function (user) {\n        return user.id === parent.author;\n      });\n    }\n  },\n  User: {\n    posts: function posts(parent, args, ctx, info) {\n      return _posts.filter(function (post) {\n        return post.author === parent.id;\n      });\n    }\n  }\n};\nvar server = new _graphqlYoga.GraphQLServer({\n  typeDefs: typeDefs,\n  resolvers: resolvers\n});\nserver.start(function () {\n  return console.log(\"server is running\");\n}); //go to localhost 4000 & and query for graphql\n// query{\n//     me{\n//       id\n//       name\n//       email\n//       age\n//     }\n// post{\n//     id\n//     title\n//   }\n//   }\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "users",
        "id",
        "name",
        "email",
        "age",
        "posts",
        "title",
        "body",
        "published",
        "author",
        "comments",
        "text",
        "typeDefs",
        "resolvers",
        "Query",
        "parent",
        "args",
        "ctx",
        "info",
        "sum",
        "number",
        "length",
        "reduce",
        "acc",
        "value",
        "add",
        "a",
        "b",
        "greeting",
        "_",
        "console",
        "log",
        "greeterName",
        "me",
        "query",
        "filter",
        "post",
        "toLowerCase",
        "includes",
        "Post",
        "find",
        "user",
        "User",
        "server",
        "GraphQLServer",
        "start"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/sumon/web development/graphql/src/",
      "sourcesContent": [
        "//schema\n//resolvers\n\nimport { GraphQLServer } from \"graphql-yoga\";\n\n//Scalar type: string, Boolean, Int, Float, ID\n// ! must return same scalar type\n// type name always cap\n\n//demo data\nconst users = [{\n    id: '1',\n    name: 'Andrew',\n    email: 'andrew@example.com',\n    age: 27\n}, {\n    id: '2',\n    name: 'Sarah',\n    email: 'sarah@example.com'\n}, {\n    id: '3',\n    name: 'Mike',\n    email: 'mike@example.com'\n}]\n\nconst posts = [{\n    id: '10',\n    title: 'GraphQL 101',\n    body: 'This is how to use GraphQL...',\n    published: true,\n    author: '1'\n}, {\n    id: '11',\n    title: 'GraphQL 201',\n    body: 'This is an advanced GraphQL post...',\n    published: false,\n    author: '1'\n}, {\n    id: '12',\n    title: 'Programming Music',\n    body: '',\n    published: false,\n    author: '2'\n}]\n\nconst comments = [{\n    id: '102',\n    text: 'This worked well for me. Thanks!'\n}, {\n    id: '103',\n    text: 'Glad you enjoyed it.'\n}, {\n    id: '104',\n    text: 'This did no work.'\n}, {\n    id: '105',\n    text: 'Nevermind. I got it to work.'\n}]\n\n\n\nconst typeDefs= `\ntype Query{\n    greeting(greeterName: String): String!\n    add(a:Float!, b:Float!): String!\n    sum(number:[Float]!): Float!\n    number: [Int]!\n    users: [User!]!\n    me: User!\n    posts(query: String): [Post]!\n    comment: [Comment]!\n    \n}\n\ntype User{\n    id: ID!\n    name: String!\n    email: String!\n    age: Int\n    posts: [Post!]!\n}\n\ntype Post{\n    id:ID!\n    title: String!\n    body: String!\n    author: User!\n}\ntype Comment{\n    id:ID\n    text: String!\n}\n`\n//age value is not must\n//resolvers get four args parent,args,ctx,info\n\nconst resolvers={\n    Query:{\n        users:(parent,args,ctx,info)=>{\n            return users;\n        },\n        sum:(parent,args,ctx,info)=>{\n            if(args.number.length === 0){\n                return 0;\n            }\n          return args.number.reduce((acc,value)=>{\n               return acc + value\n           })\n        },\n        add:(parent,args,ctx,info)=>{\n            let sum;\n            return sum= `${args.a}`+`${args.b}`\n        },\n        greeting:(_,args)=>{\n            console.log(args)\n            return `Konika said to ${args.greeterName}`\n        },\n        me:()=>{\n            return {\n                id: '123098',\n                name: 'Mike',\n                email: 'mike@example.com'\n            }\n\n        },\n        posts:(_,args)=>{\n            if(!args.query)\n            {\n                return posts;\n            }\n           return  posts.filter((post)=>{\n                return post.title.toLowerCase().includes(args.query.toLowerCase());\n            })\n\n        },\n        number:()=>{\n            return [10,12,15]\n        }\n       \n    },\n    Post:{   //when post call, author call from here. relational database\n        author:(parent,args,ctx,info)=>{\n            return users.find(user=>{\n                return user.id === parent.author\n            })\n        }\n    },\n    User:{\n        posts:(parent,args,ctx,info)=>{\n            return posts.filter(post=>{\n                return post.author=== parent.id\n            })\n        }\n    }\n    \n}\n\nconst server = new GraphQLServer({typeDefs, resolvers})\nserver.start(()=>console.log(`server is running`));\n\n//go to localhost 4000 & and query for graphql\n// query{\n//     me{\n//       id\n//       name\n//       email\n//       age\n//     }\n// post{\n//     id\n//     title\n//   }\n//   }\n  \n    "
      ]
    },
    "sourceType": "script",
    "mtime": 1634817201578
  }
}